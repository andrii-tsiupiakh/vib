<?php

/**
 * @file
 * Main file for vib module.
 */

use Drupal\Core\Routing\RouteMatchInterface;
use Drupal\vib\Entity\VibLink;

/**
 * Implements hook_help().
 */
function vib_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    case 'help.page.vib':
      $output = '';
      $output .= '<h3>' . t('About') . '</h3>';
      $output .= '<p>' . t('This module provides token [vib:link] with "View in browser" link for emails. Also it has UI to configure mail processors for different mail keys.') . '</p>';

      return $output;
  }
}

/**
 * Implements hook_mail_alter().
 */
function vib_mail_alter(array &$message) {
  $module = $message['module'];
  $key = $message['key'];
  $body = isset($message['body']) ? $message['body'] : [];
  $body = implode('', $body);

  $processor_data = _vib_get_processor_data($module, $key);
  if ($processor_data && strpos($body, '[vib:link]') !== FALSE) {
    $deleted = isset($processor_data['lifetime']) ? (int) $processor_data['lifetime'] : -1;
    $lib = isset($processor_data['lib']) ? $processor_data['lib'] : '_none';

    if ($lib == '_none') {
      $lib = NULL;
    }
    if ($deleted !== -1) {
      $deleted = time() + $deleted;
    }
    $values = [
      'library' => $lib,
      'deleted' => $deleted,
      'email_body' => str_replace('[vib:link]', '', $body),
    ];

    $vib = VibLink::create($values);
    $vib->save();

    foreach ($message['body'] as &$el) {
      $el = \Drupal::token()
        ->replace($el, ['vib_link' => $vib], ['langcode' => $message['langcode']]);
    }
  }
}

/**
 * Gets processor data for module/key pair.
 *
 * @param string $module
 *   The module name.
 * @param string $key
 *   The email key.
 *
 * @return null|array
 *   Processor settings or NULL if no processors for this module/key pair.
 */
function _vib_get_processor_data($module, $key) {
  $vib_modules = \Drupal::config('vib.settings')->get('modules');
  if ($vib_modules && $module && $key) {
    if (isset($vib_modules[$module][$key])) {
      return $vib_modules[$module][$key];
    }
    if (isset($vib_modules[$module]['none'])) {
      return $vib_modules[$module]['none'];
    }
  }

  return NULL;
}

/**
 * Implements hook_cron().
 */
function vib_cron() {
  $interval = \Drupal::config('vib.settings')->get('cron_job_time');
  $interval = !empty($interval) ? (int) $interval : 86400;

  $last_run = \Drupal::state()->get('vib.delete_last_run', 0);
  $time = \Drupal::time()->getRequestTime();
  if (($time - $last_run) > $interval) {
    $vib_links = \Drupal::entityQuery('vib_link')
      ->condition('deleted', $time, '<')
      ->execute();

    if ($vib_links) {
      $links = VibLink::loadMultiple($vib_links);
      /** @var \Drupal\vib\Entity\VibLinkInterface $link */
      foreach ($links as $link) {
        $link->delete();
      }
    }

    \Drupal::state()->set('vib.delete_last_run', $time);
  }

}
